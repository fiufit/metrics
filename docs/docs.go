// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/{version}/metrics": {
            "get": {
                "description": "Gets metrics with type/subtype/date filters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Gets metrics.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Metrics type",
                        "name": "type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Metrics subtype",
                        "name": "subtype",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Starting date",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Ending date",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Metric"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new metric. It must have a valid type + subtype.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Creates a new metric.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Body params",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/metrics.CreateMetricRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "contracts.ErrPayload": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "contracts.ErrResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/contracts.ErrPayload"
                }
            }
        },
        "metrics.CreateMetricRequest": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "subtype": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.Metric": {
            "type": "object",
            "properties": {
                "date_time": {
                    "type": "string"
                },
                "subtype": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "dev",
	Host:             "fiufit-metrics.fly.dev",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Fiufit Metrics API",
	Description:      "Fiufit's Metrics service documentation. This API serves Fiufit usage metrics for backoffice visualization.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
